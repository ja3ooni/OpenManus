# Fluentd configuration for OpenManus log aggregation

<system>
  log_level info
</system>

# Input sources
<source>
  @type tail
  @id openmanus_app_logs
  path /app/logs/*.log
  pos_file /fluentd/log/openmanus_app.log.pos
  tag openmanus.app
  <parse>
    @type json
    time_key timestamp
    time_format %Y-%m-%dT%H:%M:%S.%L%z
  </parse>
</source>

<source>
  @type tail
  @id nginx_access_logs
  path /var/log/nginx/access.log
  pos_file /fluentd/log/nginx_access.log.pos
  tag nginx.access
  <parse>
    @type json
    time_key time_local
    time_format %d/%b/%Y:%H:%M:%S %z
  </parse>
</source>

<source>
  @type tail
  @id nginx_error_logs
  path /var/log/nginx/error.log
  pos_file /fluentd/log/nginx_error.log.pos
  tag nginx.error
  <parse>
    @type regexp
    expression /^(?<time>\d{4}/\d{2}/\d{2} \d{2}:\d{2}:\d{2}) \[(?<log_level>\w+)\] (?<pid>\d+)#(?<tid>\d+): (?<message>.*)/
    time_format %Y/%m/%d %H:%M:%S
  </parse>
</source>

# Forward logs to external systems (optional)
<match **>
  @type copy

  # Store locally
  <store>
    @type file
    @id local_file_output
    path /fluentd/log/aggregated
    append true
    time_slice_format %Y%m%d
    time_slice_wait 10m
    time_format %Y-%m-%dT%H:%M:%S.%L%z
    buffer_type file
    buffer_path /fluentd/log/buffer
    flush_interval 30s
    <format>
      @type json
    </format>
  </store>

  # Send to stdout for Docker logs
  <store>
    @type stdout
    @id stdout_output
    <format>
      @type json
    </format>
  </store>

  # Uncomment to send to external log aggregation service
  # <store>
  #   @type elasticsearch
  #   host elasticsearch
  #   port 9200
  #   index_name openmanus
  #   type_name logs
  # </store>

  # Uncomment to send to Splunk
  # <store>
  #   @type splunk_hec
  #   hec_host splunk.example.com
  #   hec_port 8088
  #   hec_token YOUR_HEC_TOKEN
  # </store>
</match>

# Health check endpoint
<source>
  @type http
  @id http_input
  port 9880
  bind 0.0.0.0
</source>

# Prometheus metrics
<source>
  @type prometheus
  @id prometheus_metrics
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

<source>
  @type prometheus_output_monitor
  @id prometheus_output_monitor
  interval 10
  <labels>
    hostname "#{Socket.gethostname}"
  </labels>
</source>
